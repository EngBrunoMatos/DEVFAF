# Generated by Django 3.2.8 on 2022-05-11 12:28

import cpf_field.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('ds_grupo', models.CharField(choices=[('LEI', 'Leitor'), ('ANA', 'Analista'), ('GES', 'Gestor')], default='LEI', max_length=3, verbose_name='Grupo')),
                ('ds_secretaria', models.CharField(choices=[('Secretaria Executiva - MS', 'Secretaria Executiva - MS'), ('Fundo Nacional de Saúde - FNS', 'Fundo Nacional de Saúde - FNS'), ('Secretaria de Atenção Primária à Saúde - SAPS', 'Secretaria de Atenção Primária à Saúde - SAPS'), ('Secretaria de Atenção Especializada à Saúde - SAES', 'Secretaria de Atenção Especializada à Saúde - SAES'), ('Secretaria de Ciência, Tecnologia, Inovação e Insumos Estratégicos em Saúde - SCTIE', 'Secretaria de Ciência, Tecnologia, Inovação e Insumos Estratégicos em Saúde - SCTIE'), ('Secretaria de Vigilância em Saúde - SVS', 'Secretaria de Vigilância em Saúde - SVS'), ('Secretaria Especial de Saúde Indígena - SESAI', 'Secretaria Especial de Saúde Indígena - SESAI'), ('Secretaria de Gestão do Trabalho e da Educação na Saúde - SGTES', 'Secretaria de Gestão do Trabalho e da Educação na Saúde - SGTES'), ('Secretaria Extraordinária de Enfrentamento à Covid-19 - SECOVID', 'Secretaria Extraordinária de Enfrentamento à Covid-19 - SECOVID')], max_length=83, verbose_name='Secretaria')),
                ('username', cpf_field.models.CPFField(max_length=14, unique=True, verbose_name='CPF')),
                ('first_name', models.CharField(max_length=30, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=30, verbose_name='Sobrenome')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_trusty', models.BooleanField(default=False, help_text='Designates whether this user has confirmed his account.', verbose_name='trusty')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
